from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters.state import State, StatesGroup, StateFilter
from aiogram.fsm.context import FSMContext

from bot.filters import Admin
from bot import keyboards

import data

router = Router()

class Promt(StatesGroup):
    promt=State()


@router.message(Admin(), StateFilter(Promt), F.text=="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ")
async def cancel_promt(message: Message, state: FSMContext):
    await state.clear()
    await message.answer(
        text=
            "<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥:</b>\n\n"+
            "‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å - <i>–∑–∞–ø—É—Å–∫ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</i>\n\n"+
            "‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å - <i>–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</i>\n\n"+
            "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç - <i>–¥–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç</i>",
        parse_mode="HTML",
        reply_markup=keyboards.start()
    )

@router.message(Admin(), StateFilter(None), F.text=="üí¨ –ü—Ä–æ–º—Ç")
async def promt_handler(message: Message, state: FSMContext):
    await state.set_state(Promt.promt)
    promt = data.read_setting()["Promt"]
    await message.answer(
        "<b>–î–µ–π—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–º—Ç –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</b>\n\n"+
        f"<i><b>User:</b></i> {promt}\n\n"+
        "<i><b>GigaChat:</b></i> –ü–æ–Ω—è—Ç–Ω–æ. –ù–∞—á–Ω—ë–º?\n\n"+
        "<i><b>User:</b></i> ...\n\n"+
        "<i>–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∏—à–ª–∏—Ç–µ –Ω–æ–≤—ã–π –ø—Ä–æ–º—Ç !</i>",
        parse_mode="HTML",
        reply_markup=keyboards.cancel()
    )

@router.message(Promt.promt, F.text)
async def promt_new(message: Message, state: FSMContext):
    try:
        data.write_promt(message.text)
        await message.answer(
            text=
                "<b>–ü—Ä–æ–º—Ç –∏–∑–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ !</b>",
            parse_mode="HTML",
            reply_markup=keyboards.start()
        )
    except:
        await message.answer(
            text=
                "<b>–û—à–∏–±–∫–∞ !</b>",
            parse_mode="HTML",
            reply_markup=keyboards.start()
        )
    await state.clear()